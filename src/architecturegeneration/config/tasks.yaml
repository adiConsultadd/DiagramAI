create_pdf_extraction_task:
  description: >
    Extract the complete text content from the PDF file. {pdf_url}
    Make sure to preserve the document structure as much as possible, including paragraphs, lists, and section headings. Pay special attention to maintaining the hierarchical organization of the content.
  expected_output:
    The complete text content of the PDF document with preserved structure.
    The output should contain all text from the document, organized in a way that maintains the original document flow and organization.
  agent: create_pdf_agent

create_section_extraction_task:
  description: >
    Using the extracted text from the previous task, identify and extract the 
    following specific sections: {sections_to_extract}.
    For each section:
    1. Identify the section boundaries accurately
    2. Extract the complete content of each section
    3. Maintain the original formatting within each section
    4. Ensure no content from other sections is included
    The sections may be indicated by headings like "2. Problem" or simply "Problem".
  expected_output:
    '''A structured object containing the extracted sections with the following format:
    {{
    "{sections_to_extract[0]}": "[complete content of section]",
    "{sections_to_extract[1]}": "[complete content of section]",
    "{sections_to_extract[2]}": "[complete content of section]"
    }}
    Each section should contain its complete content with proper formatting preserved'''
  agent: create_section_extraction_agent

create_section_json_to_steps_task:
  description: >
    Use the extracted output from the previous task to convert the solution description into a structured JSON for diagram generation.
    Convert the solution description into a structured JSON for diagram generation.
    The JSON should follow this structure:
    {jsonOutput}
    And make sure all the fields are filled in the given json
    Identify all components, their relationships, external systems, and workflow steps from the solution text.
    Use knowledge to give icon names to components and categorize them appropriately.
    Each component should have a unique ID and appropriate categorization.
    Map the relationships between components accurately.
    Define workflow steps based on the implementation process described.
    Set appropriate metadata for the diagram.

  expected_output:
    A well-structured JSON object representing the architectural solution.
    The JSON should contain all necessary information to generate a diagram that accurately reflects the solution architecture.
  agent: section_json_to_steps_agent

rule_validation_task:
  description: >
    Perform a rule-based validation check on the given system architecture to ensure that:
    Reference for the incompatible teck can be found in this json. {json_url}
    No incompatible technologies are used together.
    The solution adheres to regulatory and security standards.
    The architecture follows basic compatibility guidelines.
  expected_output: >
    A list of detected violations (if any).
    A confirmation message if no violations are found.
  agent: rule_validation_agent

